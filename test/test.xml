<rekord>
    <data-source>
        <driver>org.postgresql.Driver</driver>
        <jdbc-url>jdbc:postgresql://localhost:5432/rekord</jdbc-url>
        <user>rekord_user</user>
        <password>rekord_password</password>
    </data-source>
    
    <!-- SELECTS, INSERTS, UPDATES, DELETES, LAZY_FETCHING,
         LOADING, ONE_TO_ONE, CACHING, HISTORY, HUMAN_READABLE_QUERY -->
    <logging mode="include">
        HUMAN_READABLE_QUERY
    </logging>
    
    <converter-classes>
        <converter-class class="org.magnos.rekord.convert.EnumCustomConverter" element="enum-custom-converter" />
        <converter-class class="org.magnos.rekord.convert.EnumNameConverter" element="enum-name-converter" />
        <converter-class class="org.magnos.rekord.convert.EnumOrdinalConverter" element="enum-ordinal-converter" />
    </converter-classes>
    
    <converters>
        <enum-custom-converter name="user-state" enum="org.magnos.rekord.UserState" custom-type="CHAR" UNVERIFIED="U" REGISTERED="R" DISABLED="D" />
    </converters>
    
    <classes>
        org.magnos.rekord.User
        org.magnos.rekord.Comment
        org.magnos.rekord.Commentable
        org.magnos.rekord.Crazy
    </classes>
    
    <table name="user" key="id" alias="u">
        <fields>
            <column name="id" type="long" generated="true" read-only="true" />
            <column name="name" type="string" />
            <column name="created_timestamp" type="timestamp" generated="true" read-only="true" />
            <column name="state" type="string" converter="user-state" default-value="U" />
            <foreign name="commentable_id" type="long" foreign-table="commentable" foreign-column="id" />
            <one-to-one name="commentable" generated="true" lazy="true" non-null="true" join-table="commentable" join-load="all" join-key="commentable_id" />
            <one-to-many name="comments_by" lazy="true" read-only="true" join-table="comment" join-load="basic" join-key="user_id" />
        </fields>
        <load-profiles>
            <load-profile name="without-comments" fields="id, name, created_timestamp, commentable_id" />
            <load-profile name="for-link" fields="id, name" />
            <load-profile name="short-name" fields="id, name(3)" />
        </load-profiles>
        <native-queries>
            <query name="created-before" load="for-link"><![CDATA[
                SELECT #id, #name FROM "user" WHERE "created_timestamp" < ?date
            ]]></query>
            <query name="update-state"><![CDATA[
                UPDATE "user" SET "state" = ?new_state WHERE "id" = ?id
            ]]></query>
            <query name="by-name"><![CDATA[
                SELECT * FROM "user" WHERE "name" = ?name
            ]]></query>
            <query name="by-id"><![CDATA[
                SELECT * FROM "user" WHERE "id" = ?id
            ]]></query>
        </native-queries>
        <history table="user_history" timestamp="user_history_timestamp" columns="id, name" />
    </table>
    
    <table name="comment" key="id" alias="c">
        <fields>
            <column name="id" type="long" generated="true" read-only="true" />
            <column name="text" type="string" />
            <foreign name="commentable_id" type="long" foreign-table="commentable" foreign-column="id" />
            <foreign name="user_id" type="long" foreign-table="user" foreign-column="id" />
            <many-to-one name="commentable" join-table="commentable" join-key="commentable_id" />
            <many-to-one name="user" join-table="user" join-load="for-link" join-key="user_id" />
        </fields>
        <load-profiles>
            <load-profile name="basic" fields="id, text, user_id, user[for-link]" />
        </load-profiles>
    </table>
    
    <table name="commentable" key="id" alias="cb">
        <fields>
            <column name="id" type="long" generated="true" read-only="true" />
            <column name="count" type="int" generated="true" default-value="42" />
            <column name="created_timestamp" type="timestamp" generated="true" read-only="true" />
            <one-to-many name="comments" lazy="true" join-table="comment" join-load="all" join-key="commentable_id" />
        </fields>        
    </table>
    
    <table name="crazy" key="id_0, id_1" last-modified-columns="last_modified_tms" alias="cr">
        <fields>
            <column name="id_0" type="long" generated="true" read-only="true" />
            <column name="id_1" type="long" generated="true" read-only="true" />
            <column name="diameter" type="real" />
            <column name="updates" type="int" return-on-save="true" read-only="true" generated="true" />
            <column name="last_modified_tms" type="timestamp" return-on-save="true" out="clock_timestamp()" always-update="true" generated="true" />
        </fields>
    </table>
    
    <table name="role_player" key="id" discriminator="type" alias="rp">
        <fields>
            <column name="id" type="long" generated="true" />
            <column name="name" type="text" />
            <column name="type" type="text" />
        </fields>
    </table>
    
    <table name="group" key="role_player_id" extends="role_player" discriminator-value="1" alias="g">
        <fields>
            <inherited name="role_player_id" column="id" />
            <column name="password" type="text" />
            <column name="salt" type="text" />
        </fields>        
    </table>
    
    <table name="commentable_group" key="group_id" extends="group" discriminator-value="2" alias="cg">
        <fields>
            <inherited name="group_id" column="role_player_id" />
            <foreign name="commentable_id" type="long" foreign-table="commentable" foreign-column="id" />
            <one-to-one name="commentable" generated="true" lazy="true" non-null="true" join-table="commentable" join-load="all" join-key="commentable_id" />             
        </fields>
    </table>
    
</rekord>